<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FAQ on The Community for Open Innovation and Collaboration</title>
    <link>https://eclipse.dev/rcptt/faq/</link>
    <description>Recent content in FAQ on The Community for Open Innovation and Collaboration</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>vasili.gulevich@xored.com (Vasili Gulevich)</managingEditor>
    <webMaster>vasili.gulevich@xored.com (Vasili Gulevich)</webMaster>
    <lastBuildDate>Thu, 17 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://eclipse.dev/rcptt/faq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to assert native message boxes?</title>
      <link>https://eclipse.dev/rcptt/faq/assert-native-message-box/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/assert-native-message-box/</guid>
      <description>I want to record the &amp;ldquo;Information&amp;rdquo; message box which pops up in my tool. How to use assert in this automation?
RCPTT does not show native message dialogs during replay, but instead remembers their results during recording (by adding a command set-dialog-result to a script) and automatically returns the remembered value to your application&amp;rsquo;s caller code during replay (it has to do that, because there is no way to automatically close a system-level dialog).</description>
    </item>
    
    <item>
      <title>Can RCPTT be installed as Eclipse plugin?</title>
      <link>https://eclipse.dev/rcptt/faq/install-as-plugin/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/install-as-plugin/</guid>
      <description>RCPTT consists of two parts - RCPTT IDE, which is used for launching AUTs, developing and running test cases, and RCPTT Runtime (hidden), which is automatically put inside AUT in order to provide recording/replaying of user actions.
RCPTT IDE can be installed as an Eclipse plug-in (update site), but only into a single version of Eclipse Platform (depending on a release), as it uses internal APIs. Installing RCPTT IDE into Eclipse Plugin Development Environment allows you to launch your AUT from sources.</description>
    </item>
    
    <item>
      <title>How to pass a value to a test runtime</title>
      <link>https://eclipse.dev/rcptt/faq/pass-value/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/pass-value/</guid>
      <description>In case when it is required to pass some values to a test in command line, it is possible to do it like this:
In AUT VM arguments pass desired parameters as Java properties, i.e. add arguments: -DpropertyName=propertyValue Use ECL command substitute-variables (which uses org.eclipse.core.variables plugin) to get a property value: // writes prop val to AUT workspace log log [substitute-variables &amp;#34;${system_property:propertyName}&amp;#34;] With aid of variables and user-defined procedures variables and user-defined procedures, this becomes even more convenient:</description>
    </item>
    
    <item>
      <title>How to extract an SWT widget with an ECL command?</title>
      <link>https://eclipse.dev/rcptt/faq/extract-widget/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/extract-widget/</guid>
      <description>I am trying to make a custom ECL command to extract a data from table in order to make my custom assertions on that data. I want to use the result of: get-table | ...
But when I read an object from process.getInput().read(), I get an object of the class ControlHandlerImpl and I don&amp;rsquo;t know how to handle this further. Do you have some examples using the input pipe?</description>
    </item>
    
    <item>
      <title>How to resize a window</title>
      <link>https://eclipse.dev/rcptt/faq/resize-window/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/resize-window/</guid>
      <description>Sometimes you may want a window to be a certain size.
Maximize To maximize a window you may use maximize ECL command:
to maximize main Eclipse window: get-eclipse-window | maximize to maximize any window: either: get-window &amp;#34;WindowTitle&amp;#34; | maximize or get-eclipse-window | get-object | invoke setMaximized true Minimize To minimize a window:
get-eclipse-window | get-object | invoke setMinimized true Note: sometimes you need to set Maximized to &amp;lsquo;false&amp;rsquo; before minimizing:</description>
    </item>
    
    <item>
      <title>Is it possible to order tests in a Test Suite?</title>
      <link>https://eclipse.dev/rcptt/faq/suite-order/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/suite-order/</guid>
      <description>Is it possible to change the test case order inside a test suite? Currently it is organized in an alphabetical order&amp;hellip;
One of core RCPTT principles is test independence (from each other), so you should not rely on test execution order. Test cases independency is one of core principles of testing, and we believe RCPTT plays extremely well to implement this principle with Contexts
However, there is a possibility to change test case order (disabled by defaut).</description>
    </item>
    
    <item>
      <title>Verify control sizes</title>
      <link>https://eclipse.dev/rcptt/faq/verify-control-size/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/verify-control-size/</guid>
      <description>If you need to check a size of control, but it depends on the size of a window or a screen or depends on the size of another control, you might use following approach:</description>
    </item>
    
    <item>
      <title>What does each runtime feature stand for?</title>
      <link>https://eclipse.dev/rcptt/faq/runtime-features/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/runtime-features/</guid>
      <description>You can find different Runtime Features in RCPTT Advanced Options. Here you can find the description of the most of them.
Logging Feature Description Enable Activity Logging expand activities logging Enable per command image capture take a screenshot after each ECL command Reporting Feature Description Include ignored timers report all timerExecs info even those which we are not waiting for Include wait details include wait details into Report Include trace and take screenshot report screenshots made by take-screenshot Runtime Limits Feature Description Launch Timeout (sec) abort every single test execution after a timeout Context operation runnable timeout (ms) abort context application after a timeout Time RCPTT wait for AUT application to startup (sec) abort if AUT does not start AutoBuild Job Hang Skip timeout do not wait for AutoBuild job if it takes too much time (usually, when we import resources into AUT workspace) Log waiting for job if exceed report if a job is too long Job Hang Skip timeout If job is running longer than this time, assume it is hung and move to the next command.</description>
    </item>
    
    <item>
      <title>What is the difference between Assert and Verify commands or how to get raw property values?</title>
      <link>https://eclipse.dev/rcptt/faq/get-property-raw/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
        <author>vasili.gulevich@xored.com (Vasili Gulevich)</author>
      
      <guid>https://eclipse.dev/rcptt/faq/get-property-raw/</guid>
      <description>Both commands can be used inside try/catch, however in this case an error message won&amp;rsquo;t be displayed in a report. It&amp;rsquo;s a long story how we came to a situation when we have two seemingly the same commands and the primary reason is that we need it because of backward compatibility and a design mistake. Originally ECL was an independent project, which we chose to use as a scripting language for our UI commands, so all ECL commands available in RCPTT can be split into two categories:</description>
    </item>
    
  </channel>
</rss>